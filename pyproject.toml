[tool.poetry]
name = "objutils"
version = "0.6.0"
description = "Objectfile library for Python"
authors = ["Christoph Schueler <cpu12.gems@googlemail.com>"]
license = "GPLv2"
readme = "docs/README.rst"
homepage = "https://github.com/christoph2/objutils"
classifiers = [
	# How mature is this project? Common values are
	#   3 - Alpha
	#   4 - Beta
	#   5 - Production/Stable
	"Development Status :: 4 - Beta",
	# Indicate who your project is intended for
	"Intended Audience :: Developers",
	"Topic :: Software Development",
	"Topic :: Scientific/Engineering",
	# Pick your license as you wish (should match "license" above)
	"License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
	# Specify the Python versions you support here. In particular, ensure
	# that you indicate whether you support Python 2, Python 3 or both.
	"Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13"
]

keywords=[
	"hex files",
	"intel hex",
	"s19",
	"srec",
	"srecords",
	"object files",
	"map files",
	"embedded",
	"microcontroller",
	"ECU",
	"shf",
	"rfc4194",
]


[tool.poetry.scripts]
oj-elf-info = "objutils.scripts.oj_elf_info:main"
oj-elf-syms = "objutils.scripts.oj_elf_syms:main"
oj-hex-info = "objutils.scripts.oj_hex_info:main"
oj-elf-arm-attrs = "objutils.scripts.oj_elf_arm_attrs:main"
oj-elf-extract = "objutils.scripts.oj_elf_extract:main"


[tool.poetry.dependencies]
python = ">=3.9,<4.0"
construct = "^2.10.70"
mako = "^1.3.3"
sqlalchemy = "^2.0.29"
darglint = "^1.8.1"
flake8 = "^7.0.0"
isort = "^5.13.2"
prettier = "^0.0.7"
black = "^24.4.1"
rich = "^13.8.1"
bandit = "^1.8.2"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
bumpversion = "^0.6.0"
pytest = "^8.1.1"
flake8-bugbear = "^24.4.21"
mccabe = "^0.7.0"
pycodestyle = "^2.11.1"
pyflakes = "^3.2.0"
ruff = "^0.4.1"
pyupgrade = "^3.17.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
addopts = "--verbose --tb=short --junitxml=result.xml -o junit_family=xunit2"
testpaths = "objutils/tests"

[tool.isort]
profile = "black"
force_single_line = false
lines_after_imports = 2

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.flake8]
ignore = ["D203", "E203", "E266", "E501", "W503", "F403", "F401", "BLK100"]
exclude = '''
/(
    \.git
    | __pycache__
    | __pypackages__
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.eggs
    | _build
    | build
    | docs
    | dist
    | experimental
)/
'''

max-complexity = 10
count = true
statistics = true
show-source = true
max-line-length = 132
select = ["B","C","E","F","W","T4","B9"]
extend-select = "B950"

[tool.ruff]
line-length = 132

[tool.black]
line-length=132
include = '\.pyi?$'


[tool.cibuildwheel]
build-verbosity = 3
#test-command = "pytest {package}/tests"
#test-command = "pytest -svv objutils/tests"
build = "cp3{9,10,11,12}-*"
skip = ["*-manylinux_i686", "*-musllinux_x86_64", "*-musllinux_i686"] # Skip Linux 32bit and MUSL builds.
build-frontend = "build"
