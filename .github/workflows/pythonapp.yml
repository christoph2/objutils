# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: objutils

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
        matrix:
            platform: [ubuntu-latest, windows-latest]
            python-version: [3.5, 3.6, 3.7, 3.8, pypy3]
    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        pip install -r requirements.txt
        pip install -r test_requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Bump version
      uses: jaumann/github-bumpversion-action@v0.0.7
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      if: matrix.os == 'ubuntu-latest'
    - name: Build dists
      run: |
           python setup.py bdist_wheel
           python setup.py sdist --formats=gztar
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USER_NAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      if: env.TWINE_USERNAME != null
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
